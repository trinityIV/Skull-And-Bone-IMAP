function leafext_get_tooltip(layer,tooltip){if(typeof tooltip=="string"){if(!layer.options.tooltip){if(tooltip.indexOf("{")!==-1){var tipprops=[],rxp=/{([^}]+)}/g,str=tooltip,curMatch;while(curMatch=rxp.exec(str)){tipprops.push(curMatch[1])}var thistooltip=tooltip;for(const tipprop of tipprops){if(layer.feature.properties[tipprop]){thistooltip=thistooltip.replace("{"+tipprop+"}",layer.feature.properties[tipprop])}}content=thistooltip;layer.options.tooltip=thistooltip}else{content=tooltip;layer.options.tooltip=tooltip}}else{content=layer.options.tooltip}}else{content=layer.getPopup().getContent()}return content}function leafext_hover_geojsonstyle_js(all_options){var map=window.WPLeafletMapPlugin.getCurrentMap();var map_id=map._leaflet_id;var maps=[];maps[map_id]=map;if(WPLeafletMapPlugin.geojsons.length>0){var geojsons=window.WPLeafletMapPlugin.geojsons;var geocount=geojsons.length;for(var j=0,len=geocount;j<len;j++){var geojson=geojsons[j];if(map_id==geojsons[j]._map._leaflet_id){let exclude=-1;extension=geojson._url.split(".").pop();extension=extension.toLowerCase();if(extension=="json")extension="geojson";if(!(all_options[extension]==true||all_options[extension]=="style"||all_options["geojsonstyle"])){exclude=99}if(all_options["exclude"]!==""){exclude=geojson._url.indexOf(all_options["exclude"])}if(exclude==-1){geojson.layer.on("mouseover mousemove",function(e){if(leafext_map_popups(map)==false){let i=0;e.target.eachLayer(function(){i+=1});if(i>1){leafext_make_overstyle(e.sourceTarget)}else{e.target.eachLayer(function(layer){leafext_make_overstyle(layer)})}}});geojson.layer.on("mouseout",function(e){if(leafext_map_popups(map)==false){let i=0;e.target.eachLayer(function(){i+=1});if(i>1){e.target.eachLayer(function(layer){leafext_make_styleback(layer)})}else{e.target.eachLayer(function(layer){leafext_make_styleback(layer)});geojson.resetStyle()}}});geojson.layer.on("click",function(e){let i=0;e.target.eachLayer(function(){i+=1});if(i>1){leafext_make_overstyle(e.sourceTarget)}else{map.eachLayer(function(layer){leafext_make_styleback(layer)});e.target.eachLayer(function(layer){leafext_make_overstyle(layer)})}});geojson.layer.on("popupclose",function(e){e.target.eachLayer(function(layer){leafext_make_styleback(layer)})})}else{geojson.layer.on("mouseout",function(){this.bringToBack()})}}}}}function leafext_hover_markergroupstyle_js(all_options){var map=window.WPLeafletMapPlugin.getCurrentMap();var map_id=map._leaflet_id;var maps=[];maps[map_id]=map;var markergroups=window.WPLeafletMapPlugin.markergroups;Object.entries(markergroups).forEach(([key,value])=>{if(markergroups[key]._map!==null){if(map_id==markergroups[key]._map._leaflet_id){markergroups[key].eachLayer(function(layer){if(layer instanceof L.Marker){}else if(layer instanceof L.Polygon&&all_options["polygon"]==true||all_options["polygon"]=="style"||all_options["markergroupstyle"]||(layer instanceof L.Circle&&all_options["circle"]==true||all_options["circle"]=="style"||all_options["markergroupstyle"])||(layer instanceof L.Polyline&&all_options["line"]==true||all_options["line"]=="style"||all_options["markergroupstyle"])){layer.on("mouseover mousemove",function(e){if(leafext_map_popups(map)==false){leafext_make_overstyle(e.sourceTarget)}});layer.on("mouseout",function(e){if(leafext_map_popups(map)==false){leafext_make_styleback(e.sourceTarget)}});layer.on("click",function(e){map.eachLayer(function(layer){leafext_make_styleback(layer)});leafext_make_overstyle(e.sourceTarget)});layer.on("popupclose",function(e){leafext_make_styleback(e.sourceTarget)})}else{}})}}})}function leafext_hover_geojsontooltip_js(tooltip,all_options){var snap=parseInt(all_options["popupclose"]);var map=window.WPLeafletMapPlugin.getCurrentMap();var map_id=map._leaflet_id;var maps=[];maps[map_id]=map;if(WPLeafletMapPlugin.geojsons.length>0){var geojsons=window.WPLeafletMapPlugin.geojsons;var geocount=geojsons.length;for(var j=0,len=geocount;j<len;j++){var geojson=geojsons[j];if(map_id==geojsons[j]._map._leaflet_id){geojson.layer.on("click",function(e){e.target.eachLayer(function(layer){layer.unbindTooltip();layer.bindTooltip("",{visibility:"hidden",opacity:0}).closeTooltip()})});geojson.layer.on("mousemove",function(e){let i=0;e.target.eachLayer(function(){i+=1});e.target.eachLayer(function(layer){if(i==1){leafext_hover_geojsonlayer(e,map,layer,tooltip,all_options)}else{leafext_hover_geojsonlayer(e,map,e.sourceTarget,tooltip,all_options)}})})}}}}function leafext_hover_markergrouptooltip_js(all_options){var snap=parseInt(all_options["snap"]);var map=window.WPLeafletMapPlugin.getCurrentMap();var map_id=map._leaflet_id;var maps=[];maps[map_id]=map;var markergroups=window.WPLeafletMapPlugin.markergroups;Object.entries(markergroups).forEach(([key,value])=>{if(markergroups[key]._map!==null){if(map_id==markergroups[key]._map._leaflet_id){markergroups[key].eachLayer(function(layer){if(layer instanceof L.Marker){}else if(layer instanceof L.Polygon&&all_options["polygon"]==true||all_options["polygon"]=="tooltip"||all_options["markergrouptooltip"]||(layer instanceof L.Circle&&all_options["circle"]==true||all_options["circle"]=="tooltip"||all_options["markergrouptooltip"])||(layer instanceof L.Polyline&&all_options["line"]==true||all_options["line"]=="tooltip"||all_options["markergrouptooltip"])){layer.on("mousemove",function(e){if(e.sourceTarget.getPopup()&&e.sourceTarget.getPopup().isOpen()){}else{if(leafext_map_popups(map)){e.sourceTarget.unbindTooltip();e.sourceTarget.bindTooltip("",{visibility:"hidden",opacity:0}).closeTooltip();if(snap>0){leafext_tooltip_snap(e,e.sourceTarget._map,snap)}}else{if(e.sourceTarget.getPopup()){var content=e.sourceTarget.getPopup().getContent();e.sourceTarget.bindTooltip(content,{className:all_options["class"]});e.sourceTarget.openTooltip(e.latlng)}}}});layer.on("click",function(e){e.sourceTarget.unbindTooltip();e.sourceTarget.bindTooltip("",{visibility:"hidden",opacity:0}).closeTooltip()})}else{}})}}})}function leafext_hover_markertitle_js(){var map=window.WPLeafletMapPlugin.getCurrentMap();var map_id=map._leaflet_id;var maps=[];maps[map_id]=map;var markers=window.WPLeafletMapPlugin.markers;if(markers.length>0){for(var i=0;i<WPLeafletMapPlugin.markers.length;i++){var a=WPLeafletMapPlugin.markers[i];if(a._map!=null&&a._map._leaflet_id==map_id||a._map==null){if(a.options.title){a.options.title=""}if(a._icon){a._icon.title=""}a.unbindTooltip();a.bindTooltip("",{visibility:"hidden",opacity:0}).closeTooltip()}}}}function leafext_hover_markertooltip_js(all_options){var snap=parseInt(all_options["snap"]);var map=window.WPLeafletMapPlugin.getCurrentMap();var map_id=map._leaflet_id;var maps=[];maps[map_id]=map;var markers=window.WPLeafletMapPlugin.markers;if(markers.length>0){for(var i=0;i<WPLeafletMapPlugin.markers.length;i++){var a=WPLeafletMapPlugin.markers[i];if(a._map!=null&&a._map._leaflet_id==map_id||a._map==null){if(a.options.title){a.options.title=""}if(a._icon){a._icon.title=""}a.on("mouseover mousemove",function(e){if(e.sourceTarget.getPopup()&&e.sourceTarget.getPopup().isOpen()){}else{if(leafext_map_popups(map)){e.sourceTarget.unbindTooltip();e.sourceTarget.bindTooltip("",{visibility:"hidden",opacity:0}).closeTooltip();if(snap>0){leafext_tooltip_snap(e,e.sourceTarget._map,snap)}}else{if(e.sourceTarget.getPopup()){var content=e.sourceTarget.getPopup().getContent();e.sourceTarget.bindTooltip(content,{className:all_options["class"]});e.sourceTarget.openTooltip(e.latlng)}}}});a.on("click",function(e){console.log("click marker");map.eachLayer(function(layer){leafext_make_styleback(layer)});e.sourceTarget.unbindTooltip();e.sourceTarget.bindTooltip("",{visibility:"hidden",opacity:0}).closeTooltip()})}}}}function leafext_hover_geojsonlayer(e,map,layer,tooltip,all_options){if(layer.getPopup()&&layer.getPopup().isOpen()){}else{if(leafext_map_popups(map)){layer.unbindTooltip();layer.bindTooltip("",{visibility:"hidden",opacity:0}).closeTooltip();if(all_options["snap"]>0){leafext_tooltip_snap(e,layer._map,all_options["snap"])}}else{if(layer.getPopup()){var content=leafext_get_tooltip(layer,tooltip);layer.bindTooltip(content,{className:all_options["class"]});layer.openTooltip(e.latlng)}}}}function leafext_tooltip_snap(e,map,snap){var elements=[];map.eachLayer(function(layer){if(layer.getPopup()){if(layer.getPopup().isOpen()){elements.push(new L.Marker(layer.getPopup().getLatLng()))}}});var result=L.GeometryUtil.closestLayer(map,elements,e.latlng);if(result.distance>snap){map.closePopup()}}
