function leafext_featuregroup_js(att_property,att_option,groups,visible,substr,alle){var map=window.WPLeafletMapPlugin.getCurrentMap();var map_id=map._leaflet_id;if(typeof durchlauf=="undefined"){maps=[];durchlauf=[];featGroups=[];control=[];displayed=[];cluster=[]}if(typeof durchlauf[map_id]=="undefined"){maps[map_id]=map;durchlauf[map_id]=0;featGroups[map_id]=[];displayed[map_id]=[];cluster[map_id]=alle;control[map_id]=L.control.layers(null,null,{collapsed:false});for(key in groups){featGroups[map_id][groups[key]]=new L.featureGroup.subGroup(cluster[map_id]);displayed[map_id][groups[key]]=visible[key]}}else{durchlauf[map_id]=durchlauf[map_id]+1;for(key in groups){if(groups[key]in featGroups[map_id]){}else{featGroups[map_id][groups[key]]=new L.featureGroup.subGroup(cluster[map_id]);displayed[map_id][groups[key]]=visible[key]}}}console.log("Round "+durchlauf[map_id]+" on map "+map_id+"; Option:",att_option,"; Property:",att_property,"; substr: "+substr+";"+"Groups",groups,"visible",visible);if(WPLeafletMapPlugin.markers.length>0){for(var i=0;i<WPLeafletMapPlugin.markers.length;i++){if(WPLeafletMapPlugin.markers[i]._map!==null){if(map_id==WPLeafletMapPlugin.markers[i]._map._leaflet_id){let a=WPLeafletMapPlugin.markers[i];let found=false;let this_options=a.getIcon().options;if(this_options.hasOwnProperty(att_option)){if(a.options[att_option]){if(this_options[att_option]!=a.options[att_option]&&typeof a.options[att_option]=="string"){this_options[att_option]=a.options[att_option];console.log("changed "+att_option+" "+this_options[att_option])}}}else{console.log("has not "+att_option);if(typeof a.options[att_option]=="string"){if(a.options[att_option]!=""){this_options[att_option]=a.options[att_option];console.log("has now "+att_option+" "+this_options[att_option])}}}for(const key in this_options){if(this_options.hasOwnProperty(key)){if(key==att_option){found=true;var is_key=false;var this_option=`${this_options[key]}`;if(this_option in groups){console.log("Found Marker on map "+map_id+" option exact "+key+" "+this_option+" for "+groups[this_option]);maps[map_id].removeLayer(a);a.addTo(featGroups[map_id][groups[this_option]]);is_key=true}else{if(substr==true){for(group in groups){if(this_option.match(group)){console.log("Found Marker on map "+map_id+" option substring "+key+" "+group+" for "+groups[group]);maps[map_id].removeLayer(a);a.addTo(featGroups[map_id][groups[group]]);is_key=true;break}}}}if(is_key==false){if("others"in groups){maps[map_id].removeLayer(a);a.addTo(featGroups[map_id][groups["others"]])}else{console.log("marker option "+att_option+" not matched.");console.log(a.getIcon().options)}}}}}if(found==false){if("unknown"in groups){maps[map_id].removeLayer(a);a.addTo(featGroups[map_id][groups["unknown"]])}else{console.log("marker option "+att_option+" is not available.");console.log(a.options)}}}}}}var markergroups=window.WPLeafletMapPlugin.markergroups;Object.entries(markergroups).forEach(([key,value])=>{if(markergroups[key]._map!==null){if(map_id==markergroups[key]._map._leaflet_id){markergroups[key].eachLayer(function(layer){if(layer instanceof L.Marker){}else if(layer instanceof L.Polygon||layer instanceof L.Circle||layer instanceof L.Polyline){let found=false;this_options=layer.options;for(const key in this_options){if(this_options.hasOwnProperty(key)){if(key==att_option){found=true;var is_key=false;var this_option=`${this_options[key]}`;if(this_option in groups){console.log("Found Polygon/Circle/Line on map "+map_id+" option exact "+key+" "+this_option+" for "+groups[this_option]);maps[map_id].removeLayer(layer);layer.addTo(featGroups[map_id][groups[this_option]]);is_key=true}else{if(substr==true){for(group in groups){if(this_option.match(group)){console.log("Found Polygon/Circle/Line on map "+map_id+" option substring "+key+" "+group+" for "+groups[group]);maps[map_id].removeLayer(layer);layer.addTo(featGroups[map_id][groups[group]]);is_key=true;break}}}}if(is_key==false){if("others"in groups){maps[map_id].removeLayer(layer);layer.addTo(featGroups[map_id][groups["others"]])}else{console.log("Polygon/Circle/Line option "+att_option+" not matched.");console.log(layer.options)}}}}}if(found==false){if("unknown"in groups){maps[map_id].removeLayer(layer);layer.addTo(featGroups[map_id][groups["unknown"]])}else{console.log("Polygon/Circle/Line option "+att_option+" is not available.");console.log(layer.options)}}}else{}})}}});var geojsons=window.WPLeafletMapPlugin.geojsons;if(geojsons.length>0){var geocount=geojsons.length;for(var j=0,len=geocount;j<len;j++){var geojson=geojsons[j];if(map_id==geojson._map._leaflet_id){geojson.on("ready",function(){var a=this.layer;a.eachLayer(function(layer){if(att_option!=""){let found=false;if(layer.options[att_option]){if(layer.options[att_option]in groups){console.log("Found geojson on map "+map_id+" option exact "+layer.options[att_option]+" "+groups[layer.options[att_option]]);maps[map_id].removeLayer(layer);layer.addTo(featGroups[map_id][groups[layer.options[att_option]]]);found=true}else{if(substr==true){for(group in groups){if(layer.options[att_option].match(group)){console.log("Found geojson on map "+map_id+" option substr "+layer.options[att_option]+" "+groups[group]);maps[map_id].removeLayer(layer);layer.addTo(featGroups[map_id][groups[group]]);found=true;break}}}}if(found==false){if("others"in groups){maps[map_id].removeLayer(layer);layer.addTo(featGroups[map_id][groups["others"]])}else{console.log("geojson Option "+att_option+" not in groups");console.log(layer.options[att_option])}}}else{if("unknown"in groups){maps[map_id].removeLayer(layer);layer.addTo(featGroups[map_id][groups["unknown"]])}else{console.log("geojson Option "+att_option+" is undefined.");console.log(layer.options)}}}else if(att_property!=""){let found=false;if(layer.feature.properties[att_property]){let prop=layer.feature.properties[att_property];if(prop in groups){console.log("Found geojson on map "+map_id+" property exact "+prop+" for "+groups[prop]);maps[map_id].removeLayer(layer);layer.addTo(featGroups[map_id][groups[prop]]);found=true}else{if(substr==true){for(group in groups){if(prop.match(group)){console.log("Found geojson on map "+map_id+" property substring "+prop+" "+group+" for "+groups[group]);maps[map_id].removeLayer(layer);layer.addTo(featGroups[map_id][groups[group]]);found=true;break}}}}if(found==false){if("others"in groups){maps[map_id].removeLayer(layer);layer.addTo(featGroups[map_id][groups["others"]])}else{console.log("Property "+prop+" not in groups")}}}else{if("unknown"in groups){maps[map_id].removeLayer(layer);layer.addTo(featGroups[map_id][groups["unknown"]])}else{console.log("Feature "+att_property+" for this leaflet-geojson is undefined.");console.log(layer.feature.properties)}}}});for(group in featGroups[map_id]){control[map_id].removeLayer(featGroups[map_id][group]);control[map_id].addOverlay(featGroups[map_id][group],group)}})}}}if(durchlauf[map_id]==0){for(group in featGroups[map_id]){control[map_id].addOverlay(featGroups[map_id][group],group)}}else{for(group in featGroups[map_id]){control[map_id].removeLayer(featGroups[map_id][group]);control[map_id].addOverlay(featGroups[map_id][group],group)}}control[map_id].addTo(map);cluster[map_id].addTo(map);for(key in featGroups[map_id]){if(displayed[map_id][key]=="1"){featGroups[map_id][key].addTo(map)}}}
